{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/weiss/Epitech/AI_Data_Entrepreneur_Track/CosyFront/views/Login.js\";\nimport { StatusBar } from 'expo-status-bar';\nimport React, { useState } from 'react';\nimport Button from \"react-native-web/dist/exports/Button\";\nimport CheckBox from \"react-native-web/dist/exports/CheckBox\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport View from \"react-native-web/dist/exports/View\";\nvar isLogged = false;\nexport function handleLogin(textLogin, textPassword) {\n  fetch('http://0.0.0.0:5000/auth/login', {\n    method: 'POST',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      login: textLogin,\n      password: textPassword\n    })\n  }).then(function (response) {\n    return response.json();\n  }).then(function (response) {\n    if (response.msg == \"Welcome to cosy roomie\") {\n      isLogged = true;\n      navigation.navigate(\"Home\");\n    }\n\n    alert(response.msg);\n    return response.msg;\n  });\n}\nexport default function Login(_ref) {\n  var homeStyle = _ref.homeStyle,\n      navigation = _ref.navigation;\n\n  var _React$useState = React.useState(''),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      username = _React$useState2[0],\n      onChangeUsername = _React$useState2[1];\n\n  var _React$useState3 = React.useState(\"\"),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      password = _React$useState4[0],\n      onChangePassword = _React$useState4[1];\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isSelected = _useState2[0],\n      setSelection = _useState2[1];\n\n  return React.createElement(View, {\n    style: homeStyle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  }, React.createElement(TextInput, {\n    title: \"Identifiant\",\n    placeholder: \"Identifiant...\",\n    onChangeText: function onChangeText(text) {\n      return onChangeUsername(text);\n    },\n    value: username,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }\n  }), React.createElement(TextInput, {\n    title: \"Mot de Passe\",\n    placeholder: \"Mot de Passe...\",\n    onChangeText: function onChangeText(text) {\n      return onChangePassword(text);\n    },\n    value: password,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }\n  }), React.createElement(View, {\n    style: styles.checkboxContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }\n  }, React.createElement(CheckBox, {\n    title: \"Restez connecter?\",\n    value: isSelected,\n    onValueChange: setSelection,\n    style: styles.checkbox,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 17\n    }\n  }), React.createElement(Text, {\n    style: styles.label,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 17\n    }\n  }, \"Restez connecter?\")), React.createElement(Button, {\n    title: \"Connexion\",\n    onPress: function onPress() {\n      return handleLogin(username, password);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }\n  }), React.createElement(Button, {\n    title: \"Retour\",\n    onPress: function onPress() {\n      return navigation.navigate(\"Accueil\");\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }\n  }));\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  checkboxContainer: {\n    flexDirection: \"row\",\n    marginBottom: 10\n  },\n  checkbox: {\n    alignSelf: \"center\"\n  },\n  label: {\n    margin: 10\n  }\n});","map":{"version":3,"sources":["/Users/weiss/Epitech/AI_Data_Entrepreneur_Track/CosyFront/views/Login.js"],"names":["StatusBar","React","useState","isLogged","handleLogin","textLogin","textPassword","fetch","method","headers","Accept","body","JSON","stringify","login","password","then","response","json","msg","navigation","navigate","alert","Login","homeStyle","username","onChangeUsername","onChangePassword","isSelected","setSelection","text","styles","checkboxContainer","checkbox","label","StyleSheet","create","container","flex","alignItems","justifyContent","flexDirection","marginBottom","alignSelf","margin"],"mappings":"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","sourcesContent":["import { StatusBar } from 'expo-status-bar';\nimport React, { useState } from 'react';\nimport { Button, CheckBox, StyleSheet, Text, TextInput, View } from 'react-native';\n\nvar isLogged = false;\n\nexport function handleLogin(textLogin, textPassword) {\n    fetch('http://0.0.0.0:5000/auth/login', {\n        method: 'POST',\n        headers: {\n            Accept: 'application/json',\n            'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n            login: textLogin,\n            password: textPassword\n        })\n    })\n        .then((response) => response.json())\n        .then((response) => {\n            if (response.msg == \"Welcome to cosy roomie\") {\n                isLogged = true;\n                navigation.navigate(\"Home\")\n            }\n            alert(response.msg);\n            return response.msg;\n        })\n}\n\nexport default function Login({ homeStyle, navigation }) {\n\n    const [username, onChangeUsername] = React.useState('');\n    const [password, onChangePassword] = React.useState(\"\");\n    const [isSelected, setSelection] = useState(false);\n    return (\n        <View style={homeStyle}>\n            <TextInput\n                title=\"Identifiant\"\n                placeholder=\"Identifiant...\"\n                onChangeText={(text) => onChangeUsername(text)}\n                value={username}>\n            </TextInput>\n            <TextInput\n                title=\"Mot de Passe\"\n                placeholder=\"Mot de Passe...\"\n                onChangeText={(text) => onChangePassword(text)}\n                value={password}>\n            </TextInput>\n            <View style={styles.checkboxContainer}>\n                <CheckBox title=\"Restez connecter?\"\n                    value={isSelected}\n                    onValueChange={setSelection}\n                    style={styles.checkbox}\n                />\n                <Text style={styles.label}>Restez connecter?</Text>\n            </View>\n            <Button\n                title=\"Connexion\"\n                onPress={() => handleLogin(username, password)}>\n            </Button>\n            <Button\n                title=\"Retour\"\n                onPress={() =>\n                    navigation.navigate(\"Accueil\")}>\n            </Button>\n        </View>\n    );\n}\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n        alignItems: \"center\",\n        justifyContent: \"center\",\n    },\n    checkboxContainer: {\n        flexDirection: \"row\",\n        marginBottom: 10,\n    },\n    checkbox: {\n        alignSelf: \"center\",\n    },\n    label: {\n        margin: 10,\n    },\n});"]},"metadata":{},"sourceType":"module"}