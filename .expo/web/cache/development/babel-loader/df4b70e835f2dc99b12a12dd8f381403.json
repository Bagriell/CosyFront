{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/weiss/Epitech/AI_Data_Entrepreneur_Track/CosyFront/views/Register.js\";\nimport { StatusBar } from 'expo-status-bar';\nimport React, { useState } from 'react';\nimport Button from \"react-native-web/dist/exports/Button\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport View from \"react-native-web/dist/exports/View\";\nexport function handleRegister(navigation, textEmail, textPassword, textEmailVerification, textPasswordVerification) {\n  if (textEmailVerification != textEmail) alert(\"Les addresses mail ne correspondent pas\");\n  if (textPasswordVerification != textPassword) alert(\"Les mots de passes ne correspondent pas\");\n  fetch('http://0.0.0.0:5000/auth/register', {\n    method: 'POST',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      login: textEmail,\n      password: textPassword,\n      lastName: textLastName,\n      firstName: textFirstName\n    })\n  }).then(function (response) {\n    return response.json();\n  }).then(function (response) {\n    if (response.msg == \"User registered successfully\") {\n      console.log(response.msg);\n      return;\n    }\n\n    alert(response.msg);\n    return response.msg;\n  });\n}\nexport default function Register(_ref) {\n  var homeStyle = _ref.homeStyle,\n      navigation = _ref.navigation;\n\n  var _React$useState = React.useState(\"\"),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      LastName = _React$useState2[0],\n      onChangeLastName = _React$useState2[1];\n\n  var _React$useState3 = React.useState(\"\"),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      FirstName = _React$useState4[0],\n      onChangeFirstName = _React$useState4[1];\n\n  var _React$useState5 = React.useState(''),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      email = _React$useState6[0],\n      onChangeEmail = _React$useState6[1];\n\n  var _React$useState7 = React.useState(''),\n      _React$useState8 = _slicedToArray(_React$useState7, 2),\n      emailVerification = _React$useState8[0],\n      onChangeEmailVerification = _React$useState8[1];\n\n  var _React$useState9 = React.useState(\"\"),\n      _React$useState10 = _slicedToArray(_React$useState9, 2),\n      password = _React$useState10[0],\n      onChangePassword = _React$useState10[1];\n\n  var _React$useState11 = React.useState(\"\"),\n      _React$useState12 = _slicedToArray(_React$useState11, 2),\n      passwordVerification = _React$useState12[0],\n      onChangePasswordVerification = _React$useState12[1];\n\n  return React.createElement(View, {\n    style: homeStyle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  }, React.createElement(TextInput, {\n    title: \"Nom\",\n    placeholder: \"Nom...\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }\n  }, \"onChangeText=\", function (text) {\n    return onChangePassword(text);\n  }, \"value=\", LastName), React.createElement(TextInput, {\n    title: \"Pr\\xE9nom\",\n    placeholder: \"Pr\\xE9nom...\",\n    onChangeText: function onChangeText(text) {\n      return onChangePassword(text);\n    },\n    value: FirstName,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }\n  }, \" //TODO\"), React.createElement(TextInput, {\n    title: \"Mot de Passe\",\n    placeholder: \"Mot de Passe...\",\n    onChangeText: function onChangeText(text) {\n      return onChangePassword(text);\n    },\n    value: password,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }\n  }), React.createElement(TextInput, {\n    title: \"Confirmation Mot de Passe\",\n    placeholder: \"Confirmation Mot de Passe...\",\n    onChangeText: function onChangeText(text) {\n      return onChangePasswordVerification(text);\n    },\n    value: passwordVerification,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }\n  }), React.createElement(TextInput, {\n    title: \"Addresse Email\",\n    placeholder: \"Addresse Email...\",\n    onChangeText: function onChangeText(text) {\n      return onChangeEmail(text);\n    },\n    value: email,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }\n  }), React.createElement(TextInput, {\n    title: \"Confirmation Addresse Email\",\n    placeholder: \"Confirmation Addresse Email...\",\n    onChangeText: function onChangeText(text) {\n      return onChangeEmailVerification(text);\n    },\n    value: emailVerification,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }\n  }), React.createElement(Button, {\n    onPress: function onPress() {\n      return handleRegister(navigation, email, password, emailVerification, passwordVerification);\n    },\n    title: \"Cr\\xE9\\xE9 mon compte\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }\n  }), React.createElement(Button, {\n    title: \"Retour\",\n    onPress: function onPress() {\n      return navigation.navigate(\"Accueil\");\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }\n  }));\n}","map":{"version":3,"sources":["/Users/weiss/Epitech/AI_Data_Entrepreneur_Track/CosyFront/views/Register.js"],"names":["StatusBar","React","useState","handleRegister","navigation","textEmail","textPassword","textEmailVerification","textPasswordVerification","alert","fetch","method","headers","Accept","body","JSON","stringify","login","password","lastName","textLastName","firstName","textFirstName","then","response","json","msg","console","log","Register","homeStyle","LastName","onChangeLastName","FirstName","onChangeFirstName","email","onChangeEmail","emailVerification","onChangeEmailVerification","onChangePassword","passwordVerification","onChangePasswordVerification","text","navigate"],"mappings":"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","sourcesContent":["import { StatusBar } from 'expo-status-bar';\nimport React, { useState } from 'react';\nimport { Button, StyleSheet, Text, TextInput, View } from 'react-native';\n\nexport function handleRegister(navigation, textEmail, textPassword, textEmailVerification, textPasswordVerification) {\n\n    if (textEmailVerification != textEmail)\n        alert(\"Les addresses mail ne correspondent pas\")\n    if (textPasswordVerification != textPassword)\n        alert(\"Les mots de passes ne correspondent pas\")\n\n    fetch('http://0.0.0.0:5000/auth/register', {\n        method: 'POST',\n        headers: {\n            Accept: 'application/json',\n            'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n            login: textEmail,\n            password: textPassword,\n            lastName: textLastName,\n            firstName: textFirstName\n        })\n    })\n        .then((response) => response.json())\n        .then((response) => {\n            if (response.msg == \"User registered successfully\") {\n                console.log(response.msg)\n                //navigation.navigate(\"Connection\")\n                return\n            }\n            alert(response.msg);\n            return response.msg;\n        })\n}\n\nexport default function Register({ homeStyle, navigation }) {\n\n    const [LastName, onChangeLastName] = React.useState(\"\");\n    const [FirstName, onChangeFirstName] = React.useState(\"\");\n    const [email, onChangeEmail] = React.useState('');\n    const [emailVerification, onChangeEmailVerification] = React.useState('');\n    const [password, onChangePassword] = React.useState(\"\");\n    const [passwordVerification, onChangePasswordVerification] = React.useState(\"\");\n\n    return (\n        <View style={homeStyle}>\n            <TextInput\n                title=\"Nom\"\n                placeholder=\"Nom...\">\n                onChangeText={(text) => onChangePassword(text)}\n\n                value={LastName}\n            </TextInput>\n            <TextInput\n                title=\"Prénom\"\n                placeholder=\"Prénom...\"\n                onChangeText={(text) => onChangePassword(text)}\n\n                value={FirstName}> //TODO\n            </TextInput>\n            <TextInput\n                title=\"Mot de Passe\"\n                placeholder=\"Mot de Passe...\"\n                onChangeText={(text) => onChangePassword(text)}\n                value={password}>\n            </TextInput>\n            <TextInput\n                title=\"Confirmation Mot de Passe\"\n                placeholder=\"Confirmation Mot de Passe...\"\n                onChangeText={(text) => onChangePasswordVerification(text)}\n                value={passwordVerification}>\n            </TextInput>\n            <TextInput\n                title=\"Addresse Email\"\n                placeholder=\"Addresse Email...\"\n                onChangeText={(text) => onChangeEmail(text)}\n                value={email}>\n            </TextInput>\n            <TextInput\n                title=\"Confirmation Addresse Email\"\n                placeholder=\"Confirmation Addresse Email...\"\n                onChangeText={(text) => onChangeEmailVerification(text)}\n                value={emailVerification}>\n            </TextInput>\n            <Button\n                onPress={() => handleRegister(navigation, email, password, emailVerification, passwordVerification)}\n                title=\"Créé mon compte\">\n            </Button>\n            <Button\n                title=\"Retour\"\n                onPress={() =>\n                    navigation.navigate(\"Accueil\")}>\n            </Button>\n        </View>\n    );\n}"]},"metadata":{},"sourceType":"module"}